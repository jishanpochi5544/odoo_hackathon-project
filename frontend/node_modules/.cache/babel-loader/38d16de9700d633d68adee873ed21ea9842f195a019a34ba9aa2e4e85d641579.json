{"ast":null,"code":"import { configureStore } from '@reduxjs/toolkit';\nimport { persistStore, persistReducer } from 'redux-persist';\nimport storage from 'redux-persist/lib/storage';\nimport { combineReducers } from 'redux';\n\n// Import slices\nimport authSlice from './slices/authSlice';\nimport itemSlice from './slices/itemSlice';\nimport swapSlice from './slices/swapSlice';\nimport userSlice from './slices/userSlice';\nimport uiSlice from './slices/uiSlice';\n\n// Persist configuration\nconst persistConfig = {\n  key: 'root',\n  storage,\n  whitelist: ['auth', 'user'],\n  // Only persist auth and user data\n  blacklist: ['items', 'swaps', 'ui'] // Don't persist these\n};\n\n// Combine reducers\nconst rootReducer = combineReducers({\n  auth: authSlice,\n  items: itemSlice,\n  swaps: swapSlice,\n  user: userSlice,\n  ui: uiSlice\n});\n\n// Create persisted reducer\nconst persistedReducer = persistReducer(persistConfig, rootReducer);\n\n// Configure store\nexport const store = configureStore({\n  reducer: persistedReducer,\n  middleware: getDefaultMiddleware => getDefaultMiddleware({\n    serializableCheck: {\n      ignoredActions: ['persist/PERSIST', 'persist/REHYDRATE']\n    }\n  }),\n  devTools: process.env.NODE_ENV !== 'production'\n});\n\n// Create persistor\nexport const persistor = persistStore(store);\n\n// Export types for TypeScript (if using)\n// export type RootState = ReturnType<typeof store.getState>;\n// export type AppDispatch = typeof store.dispatch;","map":{"version":3,"names":["configureStore","persistStore","persistReducer","storage","combineReducers","authSlice","itemSlice","swapSlice","userSlice","uiSlice","persistConfig","key","whitelist","blacklist","rootReducer","auth","items","swaps","user","ui","persistedReducer","store","reducer","middleware","getDefaultMiddleware","serializableCheck","ignoredActions","devTools","process","env","NODE_ENV","persistor"],"sources":["D:/cursor project/odoo/frontend/src/redux/store.js"],"sourcesContent":["import { configureStore } from '@reduxjs/toolkit';\r\nimport { persistStore, persistReducer } from 'redux-persist';\r\nimport storage from 'redux-persist/lib/storage';\r\nimport { combineReducers } from 'redux';\r\n\r\n// Import slices\r\nimport authSlice from './slices/authSlice';\r\nimport itemSlice from './slices/itemSlice';\r\nimport swapSlice from './slices/swapSlice';\r\nimport userSlice from './slices/userSlice';\r\nimport uiSlice from './slices/uiSlice';\r\n\r\n// Persist configuration\r\nconst persistConfig = {\r\n  key: 'root',\r\n  storage,\r\n  whitelist: ['auth', 'user'], // Only persist auth and user data\r\n  blacklist: ['items', 'swaps', 'ui'] // Don't persist these\r\n};\r\n\r\n// Combine reducers\r\nconst rootReducer = combineReducers({\r\n  auth: authSlice,\r\n  items: itemSlice,\r\n  swaps: swapSlice,\r\n  user: userSlice,\r\n  ui: uiSlice,\r\n});\r\n\r\n// Create persisted reducer\r\nconst persistedReducer = persistReducer(persistConfig, rootReducer);\r\n\r\n// Configure store\r\nexport const store = configureStore({\r\n  reducer: persistedReducer,\r\n  middleware: (getDefaultMiddleware) =>\r\n    getDefaultMiddleware({\r\n      serializableCheck: {\r\n        ignoredActions: ['persist/PERSIST', 'persist/REHYDRATE'],\r\n      },\r\n    }),\r\n  devTools: process.env.NODE_ENV !== 'production',\r\n});\r\n\r\n// Create persistor\r\nexport const persistor = persistStore(store);\r\n\r\n// Export types for TypeScript (if using)\r\n// export type RootState = ReturnType<typeof store.getState>;\r\n// export type AppDispatch = typeof store.dispatch; "],"mappings":"AAAA,SAASA,cAAc,QAAQ,kBAAkB;AACjD,SAASC,YAAY,EAAEC,cAAc,QAAQ,eAAe;AAC5D,OAAOC,OAAO,MAAM,2BAA2B;AAC/C,SAASC,eAAe,QAAQ,OAAO;;AAEvC;AACA,OAAOC,SAAS,MAAM,oBAAoB;AAC1C,OAAOC,SAAS,MAAM,oBAAoB;AAC1C,OAAOC,SAAS,MAAM,oBAAoB;AAC1C,OAAOC,SAAS,MAAM,oBAAoB;AAC1C,OAAOC,OAAO,MAAM,kBAAkB;;AAEtC;AACA,MAAMC,aAAa,GAAG;EACpBC,GAAG,EAAE,MAAM;EACXR,OAAO;EACPS,SAAS,EAAE,CAAC,MAAM,EAAE,MAAM,CAAC;EAAE;EAC7BC,SAAS,EAAE,CAAC,OAAO,EAAE,OAAO,EAAE,IAAI,CAAC,CAAC;AACtC,CAAC;;AAED;AACA,MAAMC,WAAW,GAAGV,eAAe,CAAC;EAClCW,IAAI,EAAEV,SAAS;EACfW,KAAK,EAAEV,SAAS;EAChBW,KAAK,EAAEV,SAAS;EAChBW,IAAI,EAAEV,SAAS;EACfW,EAAE,EAAEV;AACN,CAAC,CAAC;;AAEF;AACA,MAAMW,gBAAgB,GAAGlB,cAAc,CAACQ,aAAa,EAAEI,WAAW,CAAC;;AAEnE;AACA,OAAO,MAAMO,KAAK,GAAGrB,cAAc,CAAC;EAClCsB,OAAO,EAAEF,gBAAgB;EACzBG,UAAU,EAAGC,oBAAoB,IAC/BA,oBAAoB,CAAC;IACnBC,iBAAiB,EAAE;MACjBC,cAAc,EAAE,CAAC,iBAAiB,EAAE,mBAAmB;IACzD;EACF,CAAC,CAAC;EACJC,QAAQ,EAAEC,OAAO,CAACC,GAAG,CAACC,QAAQ,KAAK;AACrC,CAAC,CAAC;;AAEF;AACA,OAAO,MAAMC,SAAS,GAAG9B,YAAY,CAACoB,KAAK,CAAC;;AAE5C;AACA;AACA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}