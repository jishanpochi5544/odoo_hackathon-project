{"ast":null,"code":"import axios from 'axios';\nimport { store } from '../redux/store';\nimport { logout } from '../redux/slices/authSlice';\n\n// Create axios instance\nconst api = axios.create({\n  baseURL: process.env.REACT_APP_API_URL || 'http://localhost:5000/api',\n  timeout: 10000,\n  headers: {\n    'Content-Type': 'application/json'\n  }\n});\n\n// Request interceptor\napi.interceptors.request.use(config => {\n  const token = localStorage.getItem('token');\n  if (token) {\n    config.headers.Authorization = `Bearer ${token}`;\n  }\n  return config;\n}, error => {\n  return Promise.reject(error);\n});\n\n// Response interceptor\napi.interceptors.response.use(response => {\n  return response;\n}, error => {\n  const {\n    response\n  } = error;\n\n  // Handle 401 Unauthorized\n  if ((response === null || response === void 0 ? void 0 : response.status) === 401) {\n    localStorage.removeItem('token');\n    store.dispatch(logout());\n    window.location.href = '/login';\n  }\n\n  // Handle 403 Forbidden\n  if ((response === null || response === void 0 ? void 0 : response.status) === 403) {\n    console.error('Access forbidden');\n  }\n\n  // Handle 500 Server Error\n  if ((response === null || response === void 0 ? void 0 : response.status) === 500) {\n    console.error('Server error occurred');\n  }\n  return Promise.reject(error);\n});\n\n// API endpoints\nexport const endpoints = {\n  // Auth\n  auth: {\n    login: '/auth/login',\n    register: '/auth/register',\n    logout: '/auth/logout',\n    me: '/auth/me',\n    updateProfile: '/auth/profile'\n  },\n  // Items\n  items: {\n    getAll: '/items',\n    getById: id => `/items/${id}`,\n    create: '/items',\n    update: id => `/items/${id}`,\n    delete: id => `/items/${id}`,\n    search: '/items/search',\n    featured: '/items/featured',\n    userItems: '/items/user',\n    like: id => `/items/${id}/like`,\n    view: id => `/items/${id}/view`\n  },\n  // Swaps\n  swaps: {\n    getAll: '/swaps',\n    getById: id => `/swaps/${id}`,\n    create: '/swaps',\n    update: id => `/swaps/${id}`,\n    delete: id => `/swaps/${id}`,\n    userSwaps: '/swaps/user',\n    pending: '/swaps/pending',\n    accept: id => `/swaps/${id}/accept`,\n    reject: id => `/swaps/${id}/reject`,\n    complete: id => `/swaps/${id}/complete`\n  },\n  // Users\n  users: {\n    getAll: '/users',\n    getById: id => `/users/${id}`,\n    update: id => `/users/${id}`,\n    delete: id => `/users/${id}`,\n    stats: id => `/users/${id}/stats`,\n    items: id => `/users/${id}/items`\n  },\n  // Admin\n  admin: {\n    dashboard: '/admin/dashboard',\n    items: '/admin/items',\n    users: '/admin/users',\n    approveItem: id => `/admin/items/${id}/approve`,\n    rejectItem: id => `/admin/items/${id}/reject`,\n    featureItem: id => `/admin/items/${id}/feature`,\n    removeItem: id => `/admin/items/${id}/remove`,\n    banUser: id => `/admin/users/${id}/ban`,\n    unbanUser: id => `/admin/users/${id}/unban`\n  },\n  // Upload\n  upload: {\n    image: '/upload/image',\n    multiple: '/upload/multiple'\n  }\n};\n\n// Helper functions\nexport const apiHelper = {\n  // Handle API errors\n  handleError: error => {\n    if (error.response) {\n      // Server responded with error status\n      return error.response.data.message || 'An error occurred';\n    } else if (error.request) {\n      // Request was made but no response received\n      return 'Network error. Please check your connection.';\n    } else {\n      // Something else happened\n      return error.message || 'An unexpected error occurred';\n    }\n  },\n  // Create query string from object\n  createQueryString: params => {\n    const searchParams = new URLSearchParams();\n    Object.keys(params).forEach(key => {\n      if (params[key] !== undefined && params[key] !== null && params[key] !== '') {\n        searchParams.append(key, params[key]);\n      }\n    });\n    return searchParams.toString();\n  },\n  // Format date for API\n  formatDate: date => {\n    return new Date(date).toISOString();\n  },\n  // Validate file size\n  validateFileSize: (file, maxSize = 5 * 1024 * 1024) => {\n    return file.size <= maxSize;\n  },\n  // Validate file type\n  validateFileType: (file, allowedTypes = ['image/jpeg', 'image/png', 'image/webp']) => {\n    return allowedTypes.includes(file.type);\n  }\n};\nexport default api;","map":{"version":3,"names":["axios","store","logout","api","create","baseURL","process","env","REACT_APP_API_URL","timeout","headers","interceptors","request","use","config","token","localStorage","getItem","Authorization","error","Promise","reject","response","status","removeItem","dispatch","window","location","href","console","endpoints","auth","login","register","me","updateProfile","items","getAll","getById","id","update","delete","search","featured","userItems","like","view","swaps","userSwaps","pending","accept","complete","users","stats","admin","dashboard","approveItem","rejectItem","featureItem","banUser","unbanUser","upload","image","multiple","apiHelper","handleError","data","message","createQueryString","params","searchParams","URLSearchParams","Object","keys","forEach","key","undefined","append","toString","formatDate","date","Date","toISOString","validateFileSize","file","maxSize","size","validateFileType","allowedTypes","includes","type"],"sources":["D:/cursor project/odoo/frontend/src/services/api.js"],"sourcesContent":["import axios from 'axios';\r\nimport { store } from '../redux/store';\r\nimport { logout } from '../redux/slices/authSlice';\r\n\r\n// Create axios instance\r\nconst api = axios.create({\r\n  baseURL: process.env.REACT_APP_API_URL || 'http://localhost:5000/api',\r\n  timeout: 10000,\r\n  headers: {\r\n    'Content-Type': 'application/json',\r\n  },\r\n});\r\n\r\n// Request interceptor\r\napi.interceptors.request.use(\r\n  (config) => {\r\n    const token = localStorage.getItem('token');\r\n    if (token) {\r\n      config.headers.Authorization = `Bearer ${token}`;\r\n    }\r\n    return config;\r\n  },\r\n  (error) => {\r\n    return Promise.reject(error);\r\n  }\r\n);\r\n\r\n// Response interceptor\r\napi.interceptors.response.use(\r\n  (response) => {\r\n    return response;\r\n  },\r\n  (error) => {\r\n    const { response } = error;\r\n    \r\n    // Handle 401 Unauthorized\r\n    if (response?.status === 401) {\r\n      localStorage.removeItem('token');\r\n      store.dispatch(logout());\r\n      window.location.href = '/login';\r\n    }\r\n    \r\n    // Handle 403 Forbidden\r\n    if (response?.status === 403) {\r\n      console.error('Access forbidden');\r\n    }\r\n    \r\n    // Handle 500 Server Error\r\n    if (response?.status === 500) {\r\n      console.error('Server error occurred');\r\n    }\r\n    \r\n    return Promise.reject(error);\r\n  }\r\n);\r\n\r\n// API endpoints\r\nexport const endpoints = {\r\n  // Auth\r\n  auth: {\r\n    login: '/auth/login',\r\n    register: '/auth/register',\r\n    logout: '/auth/logout',\r\n    me: '/auth/me',\r\n    updateProfile: '/auth/profile',\r\n  },\r\n  \r\n  // Items\r\n  items: {\r\n    getAll: '/items',\r\n    getById: (id) => `/items/${id}`,\r\n    create: '/items',\r\n    update: (id) => `/items/${id}`,\r\n    delete: (id) => `/items/${id}`,\r\n    search: '/items/search',\r\n    featured: '/items/featured',\r\n    userItems: '/items/user',\r\n    like: (id) => `/items/${id}/like`,\r\n    view: (id) => `/items/${id}/view`,\r\n  },\r\n  \r\n  // Swaps\r\n  swaps: {\r\n    getAll: '/swaps',\r\n    getById: (id) => `/swaps/${id}`,\r\n    create: '/swaps',\r\n    update: (id) => `/swaps/${id}`,\r\n    delete: (id) => `/swaps/${id}`,\r\n    userSwaps: '/swaps/user',\r\n    pending: '/swaps/pending',\r\n    accept: (id) => `/swaps/${id}/accept`,\r\n    reject: (id) => `/swaps/${id}/reject`,\r\n    complete: (id) => `/swaps/${id}/complete`,\r\n  },\r\n  \r\n  // Users\r\n  users: {\r\n    getAll: '/users',\r\n    getById: (id) => `/users/${id}`,\r\n    update: (id) => `/users/${id}`,\r\n    delete: (id) => `/users/${id}`,\r\n    stats: (id) => `/users/${id}/stats`,\r\n    items: (id) => `/users/${id}/items`,\r\n  },\r\n  \r\n  // Admin\r\n  admin: {\r\n    dashboard: '/admin/dashboard',\r\n    items: '/admin/items',\r\n    users: '/admin/users',\r\n    approveItem: (id) => `/admin/items/${id}/approve`,\r\n    rejectItem: (id) => `/admin/items/${id}/reject`,\r\n    featureItem: (id) => `/admin/items/${id}/feature`,\r\n    removeItem: (id) => `/admin/items/${id}/remove`,\r\n    banUser: (id) => `/admin/users/${id}/ban`,\r\n    unbanUser: (id) => `/admin/users/${id}/unban`,\r\n  },\r\n  \r\n  // Upload\r\n  upload: {\r\n    image: '/upload/image',\r\n    multiple: '/upload/multiple',\r\n  },\r\n};\r\n\r\n// Helper functions\r\nexport const apiHelper = {\r\n  // Handle API errors\r\n  handleError: (error) => {\r\n    if (error.response) {\r\n      // Server responded with error status\r\n      return error.response.data.message || 'An error occurred';\r\n    } else if (error.request) {\r\n      // Request was made but no response received\r\n      return 'Network error. Please check your connection.';\r\n    } else {\r\n      // Something else happened\r\n      return error.message || 'An unexpected error occurred';\r\n    }\r\n  },\r\n  \r\n  // Create query string from object\r\n  createQueryString: (params) => {\r\n    const searchParams = new URLSearchParams();\r\n    Object.keys(params).forEach(key => {\r\n      if (params[key] !== undefined && params[key] !== null && params[key] !== '') {\r\n        searchParams.append(key, params[key]);\r\n      }\r\n    });\r\n    return searchParams.toString();\r\n  },\r\n  \r\n  // Format date for API\r\n  formatDate: (date) => {\r\n    return new Date(date).toISOString();\r\n  },\r\n  \r\n  // Validate file size\r\n  validateFileSize: (file, maxSize = 5 * 1024 * 1024) => {\r\n    return file.size <= maxSize;\r\n  },\r\n  \r\n  // Validate file type\r\n  validateFileType: (file, allowedTypes = ['image/jpeg', 'image/png', 'image/webp']) => {\r\n    return allowedTypes.includes(file.type);\r\n  },\r\n};\r\n\r\nexport default api; "],"mappings":"AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,SAASC,KAAK,QAAQ,gBAAgB;AACtC,SAASC,MAAM,QAAQ,2BAA2B;;AAElD;AACA,MAAMC,GAAG,GAAGH,KAAK,CAACI,MAAM,CAAC;EACvBC,OAAO,EAAEC,OAAO,CAACC,GAAG,CAACC,iBAAiB,IAAI,2BAA2B;EACrEC,OAAO,EAAE,KAAK;EACdC,OAAO,EAAE;IACP,cAAc,EAAE;EAClB;AACF,CAAC,CAAC;;AAEF;AACAP,GAAG,CAACQ,YAAY,CAACC,OAAO,CAACC,GAAG,CACzBC,MAAM,IAAK;EACV,MAAMC,KAAK,GAAGC,YAAY,CAACC,OAAO,CAAC,OAAO,CAAC;EAC3C,IAAIF,KAAK,EAAE;IACTD,MAAM,CAACJ,OAAO,CAACQ,aAAa,GAAG,UAAUH,KAAK,EAAE;EAClD;EACA,OAAOD,MAAM;AACf,CAAC,EACAK,KAAK,IAAK;EACT,OAAOC,OAAO,CAACC,MAAM,CAACF,KAAK,CAAC;AAC9B,CACF,CAAC;;AAED;AACAhB,GAAG,CAACQ,YAAY,CAACW,QAAQ,CAACT,GAAG,CAC1BS,QAAQ,IAAK;EACZ,OAAOA,QAAQ;AACjB,CAAC,EACAH,KAAK,IAAK;EACT,MAAM;IAAEG;EAAS,CAAC,GAAGH,KAAK;;EAE1B;EACA,IAAI,CAAAG,QAAQ,aAARA,QAAQ,uBAARA,QAAQ,CAAEC,MAAM,MAAK,GAAG,EAAE;IAC5BP,YAAY,CAACQ,UAAU,CAAC,OAAO,CAAC;IAChCvB,KAAK,CAACwB,QAAQ,CAACvB,MAAM,CAAC,CAAC,CAAC;IACxBwB,MAAM,CAACC,QAAQ,CAACC,IAAI,GAAG,QAAQ;EACjC;;EAEA;EACA,IAAI,CAAAN,QAAQ,aAARA,QAAQ,uBAARA,QAAQ,CAAEC,MAAM,MAAK,GAAG,EAAE;IAC5BM,OAAO,CAACV,KAAK,CAAC,kBAAkB,CAAC;EACnC;;EAEA;EACA,IAAI,CAAAG,QAAQ,aAARA,QAAQ,uBAARA,QAAQ,CAAEC,MAAM,MAAK,GAAG,EAAE;IAC5BM,OAAO,CAACV,KAAK,CAAC,uBAAuB,CAAC;EACxC;EAEA,OAAOC,OAAO,CAACC,MAAM,CAACF,KAAK,CAAC;AAC9B,CACF,CAAC;;AAED;AACA,OAAO,MAAMW,SAAS,GAAG;EACvB;EACAC,IAAI,EAAE;IACJC,KAAK,EAAE,aAAa;IACpBC,QAAQ,EAAE,gBAAgB;IAC1B/B,MAAM,EAAE,cAAc;IACtBgC,EAAE,EAAE,UAAU;IACdC,aAAa,EAAE;EACjB,CAAC;EAED;EACAC,KAAK,EAAE;IACLC,MAAM,EAAE,QAAQ;IAChBC,OAAO,EAAGC,EAAE,IAAK,UAAUA,EAAE,EAAE;IAC/BnC,MAAM,EAAE,QAAQ;IAChBoC,MAAM,EAAGD,EAAE,IAAK,UAAUA,EAAE,EAAE;IAC9BE,MAAM,EAAGF,EAAE,IAAK,UAAUA,EAAE,EAAE;IAC9BG,MAAM,EAAE,eAAe;IACvBC,QAAQ,EAAE,iBAAiB;IAC3BC,SAAS,EAAE,aAAa;IACxBC,IAAI,EAAGN,EAAE,IAAK,UAAUA,EAAE,OAAO;IACjCO,IAAI,EAAGP,EAAE,IAAK,UAAUA,EAAE;EAC5B,CAAC;EAED;EACAQ,KAAK,EAAE;IACLV,MAAM,EAAE,QAAQ;IAChBC,OAAO,EAAGC,EAAE,IAAK,UAAUA,EAAE,EAAE;IAC/BnC,MAAM,EAAE,QAAQ;IAChBoC,MAAM,EAAGD,EAAE,IAAK,UAAUA,EAAE,EAAE;IAC9BE,MAAM,EAAGF,EAAE,IAAK,UAAUA,EAAE,EAAE;IAC9BS,SAAS,EAAE,aAAa;IACxBC,OAAO,EAAE,gBAAgB;IACzBC,MAAM,EAAGX,EAAE,IAAK,UAAUA,EAAE,SAAS;IACrClB,MAAM,EAAGkB,EAAE,IAAK,UAAUA,EAAE,SAAS;IACrCY,QAAQ,EAAGZ,EAAE,IAAK,UAAUA,EAAE;EAChC,CAAC;EAED;EACAa,KAAK,EAAE;IACLf,MAAM,EAAE,QAAQ;IAChBC,OAAO,EAAGC,EAAE,IAAK,UAAUA,EAAE,EAAE;IAC/BC,MAAM,EAAGD,EAAE,IAAK,UAAUA,EAAE,EAAE;IAC9BE,MAAM,EAAGF,EAAE,IAAK,UAAUA,EAAE,EAAE;IAC9Bc,KAAK,EAAGd,EAAE,IAAK,UAAUA,EAAE,QAAQ;IACnCH,KAAK,EAAGG,EAAE,IAAK,UAAUA,EAAE;EAC7B,CAAC;EAED;EACAe,KAAK,EAAE;IACLC,SAAS,EAAE,kBAAkB;IAC7BnB,KAAK,EAAE,cAAc;IACrBgB,KAAK,EAAE,cAAc;IACrBI,WAAW,EAAGjB,EAAE,IAAK,gBAAgBA,EAAE,UAAU;IACjDkB,UAAU,EAAGlB,EAAE,IAAK,gBAAgBA,EAAE,SAAS;IAC/CmB,WAAW,EAAGnB,EAAE,IAAK,gBAAgBA,EAAE,UAAU;IACjDf,UAAU,EAAGe,EAAE,IAAK,gBAAgBA,EAAE,SAAS;IAC/CoB,OAAO,EAAGpB,EAAE,IAAK,gBAAgBA,EAAE,MAAM;IACzCqB,SAAS,EAAGrB,EAAE,IAAK,gBAAgBA,EAAE;EACvC,CAAC;EAED;EACAsB,MAAM,EAAE;IACNC,KAAK,EAAE,eAAe;IACtBC,QAAQ,EAAE;EACZ;AACF,CAAC;;AAED;AACA,OAAO,MAAMC,SAAS,GAAG;EACvB;EACAC,WAAW,EAAG9C,KAAK,IAAK;IACtB,IAAIA,KAAK,CAACG,QAAQ,EAAE;MAClB;MACA,OAAOH,KAAK,CAACG,QAAQ,CAAC4C,IAAI,CAACC,OAAO,IAAI,mBAAmB;IAC3D,CAAC,MAAM,IAAIhD,KAAK,CAACP,OAAO,EAAE;MACxB;MACA,OAAO,8CAA8C;IACvD,CAAC,MAAM;MACL;MACA,OAAOO,KAAK,CAACgD,OAAO,IAAI,8BAA8B;IACxD;EACF,CAAC;EAED;EACAC,iBAAiB,EAAGC,MAAM,IAAK;IAC7B,MAAMC,YAAY,GAAG,IAAIC,eAAe,CAAC,CAAC;IAC1CC,MAAM,CAACC,IAAI,CAACJ,MAAM,CAAC,CAACK,OAAO,CAACC,GAAG,IAAI;MACjC,IAAIN,MAAM,CAACM,GAAG,CAAC,KAAKC,SAAS,IAAIP,MAAM,CAACM,GAAG,CAAC,KAAK,IAAI,IAAIN,MAAM,CAACM,GAAG,CAAC,KAAK,EAAE,EAAE;QAC3EL,YAAY,CAACO,MAAM,CAACF,GAAG,EAAEN,MAAM,CAACM,GAAG,CAAC,CAAC;MACvC;IACF,CAAC,CAAC;IACF,OAAOL,YAAY,CAACQ,QAAQ,CAAC,CAAC;EAChC,CAAC;EAED;EACAC,UAAU,EAAGC,IAAI,IAAK;IACpB,OAAO,IAAIC,IAAI,CAACD,IAAI,CAAC,CAACE,WAAW,CAAC,CAAC;EACrC,CAAC;EAED;EACAC,gBAAgB,EAAEA,CAACC,IAAI,EAAEC,OAAO,GAAG,CAAC,GAAG,IAAI,GAAG,IAAI,KAAK;IACrD,OAAOD,IAAI,CAACE,IAAI,IAAID,OAAO;EAC7B,CAAC;EAED;EACAE,gBAAgB,EAAEA,CAACH,IAAI,EAAEI,YAAY,GAAG,CAAC,YAAY,EAAE,WAAW,EAAE,YAAY,CAAC,KAAK;IACpF,OAAOA,YAAY,CAACC,QAAQ,CAACL,IAAI,CAACM,IAAI,CAAC;EACzC;AACF,CAAC;AAED,eAAevF,GAAG","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}